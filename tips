การเข้าถึง Profile model ผ่าน User model ทำได้โดยการสร้าง OneToOneField ใน Model ของ Profile ชี้ไปยัง User model ดังนี้

python
Copy code
from django.contrib.auth.models import User

class Profile(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    first_name = models.CharField(max_length=100)
    last_name = models.CharField(max_length=100)
    email = models.EmailField()
    profile_image = models.ImageField(upload_to='profile_images/', blank=True)

    def __str__(self):
        return f'{self.user.username} Profile'
โดยใช้ OneToOneField จะช่วยให้เราสร้างความสัมพันธ์แบบ 1-to-1 กับ User model ได้ ซึ่ง Profile จะถูกสร้างขึ้นมาใหม่โดยใช้ user.profile โดย user เป็น instance ของ User model ซึ่ง user.profile จะชี้ไปยัง instance ของ Profile model ที่เกี่ยวข้องกับ User model นั้นๆ ดังนั้นใน views.py เราสามารถเข้าถึง profile โดยใช้ user.profile ได้เลย โดยไม่จำเป็นต้องส่ง profile เข้าไปใน function ด้วย ดังนี้

python
Copy code
@login_required
def profile(request):
    user = request.user
    if request.method == 'POST':
        user_form = CustomUserChangeForm(request.POST, instance=user)
        profile_form = UpdateProfileForm(request.POST, instance=user.profile)
        if user_form.is_valid() and profile_form.is_valid():
            user_form.save()
            profile_form.save()
            return redirect('profile')
    else:
        user_form = CustomUserChangeForm(instance=user)
        profile_form = UpdateProfileForm(instance=user.profile)

    return render(request, 'profile.html', {
        'user_form': user_form,
        'profile_form': profile_form
    })
ใน UpdateProfileForm ที่เราสร้างขึ้นมาใหม่ เราใช้ ModelForm และกำหนด Meta ของ Profile model ที่เราต้องการแก้ไข และกำหนด fields ที่ต้องการแก้ไข ใน views.py เราก็จะเรียกใช้ฟอร์ม UpdateProfileForm แทนที่ ProfileForm ดังนี้

python
Copy code
from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required
from .forms import CustomUserCreationForm, CustomUserChangeForm, UpdateProfileForm

@login_required
def profile(request):
    user = request.user

    if request.method == 'POST':
        user_form = CustomUserChange



Jhon O-cha
ถ้าเชื่อม OneToOneFieldตารางowner อีกตารางไหม
ใช้ OneToOneField เพื่อเชื่อมตารางกันเป็น 1-to-1 ได้หลายตาราง ซึ่งแต่ละตารางก็สามารถมี OneToOneField กับตารางอื่นได้เช่นกัน โดยสามารถสร้าง OneToOneField ใน Model อื่น ๆ ได้ดังนี้

python
Copy code
from django.contrib.auth.models import User

class Owner(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    name = models.CharField(max_length=100)
    phone_number = models.CharField(max_length=20)
    email = models.EmailField()

    def __str__(self):
        return self.name